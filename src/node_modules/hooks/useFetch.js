import { useState, useEffect, useCallback } from "react"
import axios from "axios"
import useLocalStorage from 'hooks/useLocalStorage'



export default url => {
    const baseUrl = 'https://conduit.productionready.io/api'
    const [isLoading, setIsLoading] = useState(false)
    const [response, setResponse] = useState(null)
    const [error, steError] = useState(null)
    const [options, setOpions] = useState({})
    const [token] = useLocalStorage('token')



    const doFetch = useCallback((options = {}) => {
        setOpions(options)
        setIsLoading(true)
    }, [])

    useEffect(() => {
        const requestOptions = {
            ...options,
            ...{
                headers: {
                    authorization: token ? `Token ${token}` : ''
                }
            }
        }
        if (!isLoading) {
            return
        }
        axios(baseUrl + url, requestOptions)
            .then(res => {
                console.log('success', res)
                setIsLoading(false)
                setResponse(res.data)
            })
            .catch(error => {
                console.log('error', error)
                setIsLoading(false)
                steError(error.response.data)
            })
    }, [isLoading, url, options, token])

    return [{ isLoading, response, error }, doFetch]

}




