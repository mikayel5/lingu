import React, { useEffect, useContext } from 'react'
import useFetch from 'hooks/useFetch'
import { CurrentUserContext } from 'contexts/currentUser'
import useLocalStorage from 'hooks/useLocalStorage'


const CurrentUserChecker = ({ children }) => {
    const [{ response }, doFetch] = useFetch('/user')
    const [, setCurrUserState] = useContext(CurrentUserContext)
    const [token] = useLocalStorage('token')

    useEffect(() => {
        if (!token) {
            setCurrUserState(state => ({
                ...state,
                isLoggedIn: false
            }))
            return
        }
        doFetch()
        setCurrUserState(state => ({
            ...state,
            isLoading: true
        }))
    }, [])

    useEffect(() => {
        if (!response) {
            return
        }

        setCurrUserState(state => ({
            ...state,
            isLoggedIn: true,
            isLoading: false,
            currentUser: response.user
        }))
    }, [response, setCurrUserState])
    return children
}

export default CurrentUserChecker