import React, { useState, useEffect, useContext } from "react"
import { Link, Redirect } from "react-router-dom"
import useFetch from "hooks/useFetch"
import { useRouteMatch } from "react-router-dom"
import useLocalStorage from "hooks/useLocalStorage"
import { CurrentUserContext } from 'contexts/currentUser'


const Authentication = () => {
    const match = useRouteMatch();
    const isLogin = match.path === '/login'
    const pageTitle = isLogin ? 'Sign In' : 'Sign up'
    const descriptionLink = isLogin ? '/register' : '/login'
    const descriptionText = isLogin ? 'Need an account' : 'Have an account'
    const apiUrl = isLogin ? '/users/login' : '/users'
    const [email, setEmail] = useState('')
    const [password, setPassword] = useState('')
    const [username, setUsername] = useState('')
    const [isSuccessfullsubmit, setIsSuccessfullsubmit] = useState(false)
    const [{ response, isLoading }, doFetch] = useFetch(apiUrl) //custom Hooks
    const [token, setToken] = useLocalStorage('token')
    const [currentUserState, setCurrentUserState] = useContext(CurrentUserContext)

    console.log('currentUserState', currentUserState)
    const handleSubmit = (event) => {
        event.preventDefault()
        console.log("data", email, password)
        const user = isLogin ? { email, password } : { email, password, username }
        doFetch({
            method: 'post',
            data: {
                user
            }
        })
    }
    useEffect(() => {
        if (!response) {
            return
        }
        setToken(response.user.token)
        setIsSuccessfullsubmit(true)
        setCurrentUserState(state => ({
            ...state,
            isLoggedIn: true,
            isLoading: false,
            currentUser: response.user
        }))
    }, [response, setToken])

    if (isSuccessfullsubmit) {
        return <Redirect to='/' />
    }
    return (
        <div className="auth-page">
            <div className="row">
                <div className="col-md-6 offset-md-3 col-xs-12">
                    <h1 className="text-xs-center">{pageTitle}</h1>
                    <p className="text-xs-center">
                        <Link to={descriptionLink} >{descriptionText}</Link>
                    </p>
                    <form onSubmit={handleSubmit}>

                        <fieldset>
                            {!isLogin && (<fieldset className="form-group">
                                <input
                                    type="text"
                                    className="form-control form-control-lg"
                                    placeholder="User Name"
                                    value={username}
                                    onChange={e => setUsername(e.target.value)}
                                />
                            </fieldset>)}
                            <fieldset className="form-group">
                                <input
                                    type="email"
                                    className="form-control form-control-lg"
                                    placeholder="Email"
                                    value={email}
                                    onChange={e => setEmail(e.target.value)}
                                />
                            </fieldset>
                            <fieldset className="form-group">
                                <input
                                    type="password"
                                    className="form-control form-control-lg"
                                    placeholder="Passowrd"
                                    value={password}
                                    onChange={e => setPassword(e.target.value)}
                                />
                                <button className="btn btn-lg btn-primary pull-xs-right"
                                    type="submit"
                                    disabled={isLoading}
                                >{pageTitle}
                                </button>
                            </fieldset>
                        </fieldset>

                    </form>
                </div>
            </div>
        </div>
    )
}

export default Authentication;